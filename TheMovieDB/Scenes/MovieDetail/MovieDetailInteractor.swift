//
//  MovieDetailInteractor.swift
//  TheMovieDB
//
//  Created by Burak AKIN on 28.08.2020.
//  Copyright (c) 2020 Burak AKIN. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailBusinessLogic
{
    func fetchMovieDetail(request: MovieDetailm.Detail.Request)
    func goToDetail(request: MovieDetailm.SelectedMovie.Request)
}

protocol MovieDetailDataStore
{
    var selectedMovieId: Int? { get set }
    var similarMovies: [MovieList] { get set }
    var movieDetail: MovieDetail? { get set }
}

class MovieDetailInteractor: MovieDetailBusinessLogic, MovieDetailDataStore
{
    var presenter: MovieDetailPresentationLogic?
    var worker = MovieDetailWorker()
    //var name: String = ""
    
    var selectedMovieId: Int?
    var similarMovies: [MovieList] = []
    var movieDetail: MovieDetail?
    // MARK: Do something
    
    func fetchMovieDetail(request: MovieDetailm.Detail.Request)
    {
        worker.fetchMovieDetails(request: MovieDetailRequest(movieId: String(selectedMovieId!))) { (result) in
            switch result {
            case .success(let response):
                self.movieDetail = response
                self.fetchSimilarMovies()
            case .failure(let error):
                print(error.localizedDescription)
                break
            }
        }
        
        
        
    }
    
    func fetchSimilarMovies()
    {
        worker.fetchSimilarMovies(request: MovieDetailRequest(movieId: String(selectedMovieId!))) { (result) in
            switch result {
            case .success(let response):
                self.similarMovies = response.results!
                let response = MovieDetailm.Detail.Response(movieDetail: self.movieDetail!, similarMovies: self.similarMovies)
                self.presenter?.presentDetail(response: response)
            case .failure(let error):
                print(error.localizedDescription)
                break
            }
        }
    }
    
    func goToDetail(request: MovieDetailm.SelectedMovie.Request) {
        self.selectedMovieId = similarMovies[request.index].id
        self.presenter?.goToDetail(request: MovieDetailm.SelectedMovie.Response())
        
    }
    
}
