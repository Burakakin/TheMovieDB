//
//  ListPresenter.swift
//  TheMovieDB
//
//  Created by Burak AKIN on 28.08.2020.
//  Copyright (c) 2020 Burak AKIN. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListPresentationLogic
{
    func presentUpcomingMovies(response: List.UpcomingMovies.Response)
    func presentNowPlayingMovies(response: List.NowPlayingMovies.Response)
    func presentMovieDetail(response: List.SelectedMovie.Response)
}

class ListPresenter: ListPresentationLogic
{
    weak var viewController: ListDisplayLogic?
    
    // MARK: Do something
    
    func presentUpcomingMovies(response: List.UpcomingMovies.Response)
    {
        var sections: [Section] = []
        
        let upcoming: [CellConfigurator] = response.response.map {
            return ListMoviesCellConfigurator(item: ListMoviesCellViewModel(title: $0.title, releaseDate: $0.releaseDate, orginalTitle: $0.originalTitle, posterPath: $0.posterPath ))
        }
        
        sections.append(Section(items: upcoming))
        
        
        let viewModel = List.UpcomingMovies.ViewModel(sections: sections)
        viewController?.displayUpcomingMovies(viewModel: viewModel)
    }
    
    func presentNowPlayingMovies(response: List.NowPlayingMovies.Response) {
        var sections: [Section] = []
        
        let nowPlaying: [CellConfigurator] = [SliderCellConfigurator(item: SliderCellViewModel(nowPlayingMoview: response.response))]
        
        sections.append(Section(items: nowPlaying))
        
        let viewModel = List.NowPlayingMovies.ViewModel(sections: sections)
        viewController?.displayNowPlayingMovies(viewModel: viewModel)
        
    }
    
    func presentMovieDetail(response: List.SelectedMovie.Response) {
        viewController?.displayMovieDetail(viewModel: List.SelectedMovie.ViewModel())
    }
}
